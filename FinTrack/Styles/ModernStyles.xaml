<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- 1. RENK PALETİ ve TEMEL KAYNAKLAR -->
    <SolidColorBrush x:Key="BackgroundBrush" Color="#0A0E14"/>
    <SolidColorBrush x:Key="CardBackgroundBrush" Color="#2A2D4D"/> <!-- Unified definition -->
    <SolidColorBrush x:Key="BorderBrush" Color="#afb2b6ff"/>
    <SolidColorBrush x:Key="PrimaryButtonBrush" Color="#238636"/>
    <SolidColorBrush x:Key="PrimaryButtonHoverBrush" Color="#2EA043"/>
    <SolidColorBrush x:Key="PrimaryButtonPressedBrush" Color="#1C6E2C"/> <!-- Darker shade for pressed state -->
    <SolidColorBrush x:Key="TextBrush" Color="#C9D1D9"/>
    <SolidColorBrush x:Key="SecondaryTextBrush" Color="#e2e8efff"/>
    <SolidColorBrush x:Key="ErrorBrush" Color="#F85149"/>
    <SolidColorBrush x:Key="AccentBrush" Color="#58A6FF"/>

    <SolidColorBrush x:Key="PrimaryBrush" Color="#FF007ACC"/>

    <SolidColorBrush x:Key="BotMessageBackgroundBrush" Color="#2C2F3B"/>
    <SolidColorBrush x:Key="UserMessageBackgroundBrush" Color="#0078D7"/>

    <SolidColorBrush x:Key="StatusGreenBrush" Color="#4CAF50"/>
    <SolidColorBrush x:Key="StatusRedBrush" Color="#F44336"/>
    <SolidColorBrush x:Key="CardDarkerBackgroundBrush" Color="#21243B"/> <!-- For nested cards -->
    <SolidColorBrush x:Key="PrimaryAccentBrush" Color="#8A2BE2"/> <!-- Purple -->
    <SolidColorBrush x:Key="SecondaryAccentBrush" Color="#FF007F"/> <!-- Bright Pink -->

    <SolidColorBrush x:Key="MainBackgroundBrush" Color="#1E203B"/>

    <!-- Renk Fırçaları -->
    <SolidColorBrush x:Key="TopBarBackgroundBrush" Color="#2A2D4D"/>
    <SolidColorBrush x:Key="TopBarTextPrimaryBrush" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="TopBarTextSecondaryBrush" Color="#A8A9B5"/>
    <SolidColorBrush x:Key="TopBarAccentBrush" Color="#00E0C6"/> <!-- Neon Teal -->

    <!-- Kartlar için Yeni Renkler -->
    <SolidColorBrush x:Key="AccentPinkBrush" Color="#FF4081"/>
    <SolidColorBrush x:Key="AccentOrangeBrush" Color="#FFAB40"/>
    <SolidColorBrush x:Key="AccentBlueBrush" Color="#448AFF"/>
    <SolidColorBrush x:Key="AccentGreenBrush" Color="#00E676"/> <!-- Matches Neon Teal -->
    <SolidColorBrush x:Key="ProgressBarBackgroundBrush" Color="#404467"/>

    <!-- Varsayılan Değerler -->
    <FontFamily x:Key="DefaultFont">Segoe UI</FontFamily>
    <CornerRadius x:Key="DefaultCornerRadius">6</CornerRadius>
    <Thickness x:Key="DefaultPadding" Left="15" Top="8" Right="15" Bottom="8"/>

    <!-- Ana Başlık Stili -->
    <Style x:Key="HeaderTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource DefaultFont}"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,0,5"/>
    </Style>

    <!-- Üyelik Tipi için Gradyan Fırçası -->
    <LinearGradientBrush x:Key="NeonGradientBrush" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Color="#00E0C6" Offset="0.0" />
        <GradientStop Color="#39A7FF" Offset="1.0" />
    </LinearGradientBrush>

    <!-- Alt Başlık/Açıklama Stili -->
    <Style x:Key="SubHeaderTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource SecondaryTextBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource DefaultFont}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,0,25"/>
    </Style>

    <!-- "Üyelik" Kartları için Gradyan -->
    <LinearGradientBrush x:Key="MembershipAccentGradientBrush" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Color="#5170FF" Offset="0.0" />
        <GradientStop Color="#FF66C4" Offset="1.0" />
    </LinearGradientBrush>

    <!-- "Borçlar" Kartları için Gradyan -->
    <LinearGradientBrush x:Key="DebtAccentGradientBrush" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Color="#8C52FF" Offset="0.0" />
        <GradientStop Color="#FF8585" Offset="1.0" />
    </LinearGradientBrush>

    <!-- Hesapların Toplamı için Gradyan -->
    <LinearGradientBrush x:Key="TotalBalanceGradientBrush" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Color="#33FF00" Offset="0.0" />
        <GradientStop Color="#FF0000" Offset="1.0" />
    </LinearGradientBrush>

    <!-- "İşlemler" ve "Raporlar" Etiket Stili -->
    <Style x:Key="TagBorderStyle" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource CardBackgroundBrush}"/>
        <Setter Property="CornerRadius" Value="10"/>
        <Setter Property="Padding" Value="8,3"/>
        <Setter Property="Margin" Value="2"/>
    </Style>

    <!-- "Bütçeler" İç Kart Stili -->
    <Style x:Key="BudgetSubCardStyle" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource CardDarkerBackgroundBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="CornerRadius" Value="15"/>
        <Setter Property="Padding" Value="15"/>
        <Setter Property="Margin" Value="5"/>
    </Style>

    <!-- Form Etiket Stili -->
    <Style x:Key="LabelTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource SecondaryTextBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource DefaultFont}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Margin" Value="0,15,0,5"/>
    </Style>

    <!-- Hata Mesajı Stili -->
    <Style x:Key="ErrorTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource ErrorBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource DefaultFont}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Margin" Value="0,5,0,0"/>
    </Style>

    <!-- 3. GİRİŞ KONTROLÜ STİLLERİ -->
    <Style x:Key="BaseInputStyle" TargetType="Control">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="10,8"/>
        <Setter Property="FontFamily" Value="{StaticResource DefaultFont}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
    </Style>

    <!-- Dashboard Kart Stili -->
<Style x:Key="DashboardCardStyle" TargetType="Border">
    <Setter Property="Background" Value="{StaticResource CardBackgroundBrush}"/>
    <Setter Property="CornerRadius" Value="20"/>
    <Setter Property="Margin" Value="10"/>
    <Setter Property="Padding" Value="15"/>
    
    <!-- 1. ADIM: Animasyonun hedef alabilmesi için bir RenderTransform ekliyoruz. -->
    <!-- Başlangıçta ölçek 1.0 (normal boyut) olarak ayarlanır. -->
    <Setter Property="RenderTransform">
        <Setter.Value>
            <ScaleTransform ScaleX="1.0" ScaleY="1.0" CenterX="0.5" CenterY="0.5"/>
        </Setter.Value>
    </Setter>
    <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
    
    <!-- 2. ADIM: Fare olaylarını dinleyecek EventTrigger'ları ekliyoruz. -->
    <Style.Triggers>
        <!-- Fare kartın üzerine geldiğinde (MouseEnter) bu animasyon çalışır. -->
        <EventTrigger RoutedEvent="MouseEnter">
            <BeginStoryboard>
                <Storyboard>
                    <!-- Yatayda büyüme animasyonu -->
                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                     To="1.03" 
                                     Duration="0:0:0.2">
                        <DoubleAnimation.EasingFunction>
                            <CubicEase EasingMode="EaseOut"/>
                        </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                    
                    <!-- Dikeyde büyüme animasyonu -->
                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                     To="1.03"
                                     Duration="0:0:0.2">
                        <DoubleAnimation.EasingFunction>
                            <CubicEase EasingMode="EaseOut"/>
                        </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>

        <!-- Fare kartın üzerinden çekildiğinde (MouseLeave) bu animasyon çalışır. -->
        <EventTrigger RoutedEvent="MouseLeave">
            <BeginStoryboard>
                <Storyboard>
                    <!-- Yatayda küçülüp normal boyutuna dönme animasyonu -->
                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                     To="1.0"
                                     Duration="0:0:0.3">
                        <DoubleAnimation.EasingFunction>
                            <CubicEase EasingMode="EaseOut"/>
                        </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>

                    <!-- Dikeyde küçülüp normal boyutuna dönme animasyonu -->
                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                     To="1.0"
                                     Duration="0:0:0.3">
                        <DoubleAnimation.EasingFunction>
                            <CubicEase EasingMode="EaseOut"/>
                        </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
    </Style.Triggers>
</Style>

    <!-- Büyük Rakamlar için Stil -->
    <Style x:Key="LargeMetricTextStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="42"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{StaticResource TopBarTextPrimaryBrush}"/>
        <Setter Property="Margin" Value="0,5,0,0"/>
    </Style>

    <!-- Kart Başlıkları için Stil -->
    <Style x:Key="CardTitleTextStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{StaticResource TopBarTextPrimaryBrush}"/>
        <Setter Property="Margin" Value="0,0,0,10"/>
    </Style>

    <!-- Modern TextBox Stili -->
    <Style x:Key="ModernTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource BaseInputStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border x:Name="border" Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{StaticResource DefaultCornerRadius}">
                        <ScrollViewer x:Name="PART_ContentHost" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource SecondaryTextBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Modern PasswordBox Stili -->
    <Style x:Key="ModernPasswordBoxStyle" TargetType="PasswordBox" BasedOn="{StaticResource BaseInputStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="PasswordBox">
                    <Border x:Name="border" Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{StaticResource DefaultCornerRadius}">
                        <ScrollViewer x:Name="PART_ContentHost" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource SecondaryTextBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- İkon Buton Stili (TopBar) -->
    <Style x:Key="TopBarIconButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="36"/>
        <Setter Property="Height" Value="36"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="18">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#3D4060"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#2A2D4D"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Vurgulu Buton Stili -->
    <Style x:Key="AccentButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource TopBarAccentBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource TopBarBackgroundBrush}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Padding" Value="20,10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="18">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Opacity" Value="0.85"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Opacity" Value="0.7"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Navigasyon RadioButton Stili -->
    <Style x:Key="NavigationRadioButtonStyle" TargetType="RadioButton">
        <Setter Property="Foreground" Value="{StaticResource TopBarTextSecondaryBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Padding" Value="10,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid x:Name="RootGrid">
                        <Grid.RenderTransform>
                            <ScaleTransform ScaleX="1.0" ScaleY="1.0" CenterX="0.5" CenterY="0.5"/>
                        </Grid.RenderTransform>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <TextBlock x:Name="Text" Grid.Row="0" Text="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,8"/>
                        <Border x:Name="Indicator" Grid.Row="1" Height="3" Width="{Binding ActualWidth, ElementName=Text}" CornerRadius="1.5" Background="{StaticResource TopBarAccentBrush}" Visibility="Collapsed"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Text" Property="Foreground" Value="{StaticResource TopBarTextPrimaryBrush}"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1.1" Duration="0:0:0.2">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1.1" Duration="0:0:0.2">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1.0" Duration="0:0:0.2">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1.0" Duration="0:0:0.2">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Text" Property="Foreground" Value="{StaticResource TopBarTextPrimaryBrush}"/>
                            <Setter TargetName="Indicator" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Ana Buton Stili -->
    <Style x:Key="PrimaryButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource PrimaryButtonBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Padding" Value="{StaticResource DefaultPadding}"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Margin" Value="0,15,0,0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="{StaticResource DefaultCornerRadius}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource PrimaryButtonHoverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource PrimaryButtonPressedBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="#4A5568"/>
                            <Setter Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Link Buton Stili -->
    <Style x:Key="LinkButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{StaticResource AccentBrush}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <TextBlock x:Name="ContentText" Text="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="TextDecorations" Value="{x:Null}"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="TextDecorations" Value="Underline"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Göz Buton Stili -->
    <Style x:Key="EyeButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{StaticResource AccentBrush}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Width" Value="24"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource TopBarAccentBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- İkincil Buton Stili -->
    <Style x:Key="SecondaryButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource SecondaryTextBrush}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Padding" Value="{StaticResource DefaultPadding}"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{StaticResource DefaultCornerRadius}">
                        <Border x:Name="overlay" Background="#00FFFFFF" CornerRadius="{StaticResource DefaultCornerRadius}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" TextElement.Foreground="{TemplateBinding Foreground}"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="overlay" Property="Background" Value="#1A8B949E"/>
                            <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource SecondaryTextBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="overlay" Property="Background" Value="#338B949E"/>
                            <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ListViewItem'ın varsayılan mavi seçim/hover efektini kaldıran stil -->
    <Style x:Key="CleanListViewItemStyle" TargetType="ListViewItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border BorderBrush="{StaticResource ProgressBarBackgroundBrush}" BorderThickness="0,0,0,1">
                        <ContentPresenter Margin="0,15"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- "İşlemler" kartındaki kategori etiketleri için stil -->
    <Style x:Key="TransactionCategoryTagStyle" TargetType="Border">
        <Setter Property="CornerRadius" Value="15"/>
        <Setter Property="BorderBrush" Value="#4A5476"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="12,5"/>
        <Setter Property="MinWidth" Value="80"/>
    </Style>

    <!-- "İşlemler" kartındaki tarih rozetleri için stil -->
    <Style x:Key="TransactionDateBadgeStyle" TargetType="Border">
        <Setter Property="CornerRadius" Value="15"/>
        <Setter Property="Padding" Value="12,6"/>
    </Style>

    <!-- ModernExpanderStyle -->
<Style x:Key="ModernExpanderStyle" TargetType="{x:Type Expander}">
    <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderBrush" Value="Transparent"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="Padding" Value="0"/>
    <Setter Property="Template">
        <Setter.Value>
            <ControlTemplate TargetType="{x:Type Expander}">
                <DockPanel>
                    <!-- Header (Başlık ve Açma/Kapama Düğmesi) -->
                    <Border x:Name="HeaderBorder" DockPanel.Dock="Top" 
                            Background="{TemplateBinding Background}"
                            Padding="10,5">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            
                            <!-- Başlık Metni -->
                            <ContentPresenter Grid.Column="0"
                                              ContentSource="Header"
                                              RecognizesAccessKey="True"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left"
                                              Margin="0"
                                              TextBlock.FontWeight="SemiBold"
                                              TextBlock.FontSize="14"/>
                            
                            <!-- Açma/Kapama Düğmesi (Ok) -->
                            <ToggleButton Grid.Column="1"
                                          IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          OverridesDefaultStyle="True">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                        <Border Background="Transparent" Padding="5">
                                            <Path x:Name="arrow"
                                                  Data="M 0 0 L 4 4 L 8 0 Z"
                                                  Fill="{StaticResource TextBrush}"
                                                  Stroke="{StaticResource TextBrush}"
                                                  StrokeThickness="1.5"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center">
                                                <Path.RenderTransform>
                                                    <RotateTransform CenterY="2"/>
                                                </Path.RenderTransform>
                                            </Path>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter TargetName="arrow" Property="RenderTransform">
                                                    <Setter.Value>
                                                        <RotateTransform Angle="180" CenterY="2"/>
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="arrow" Property="Fill" Value="{StaticResource PrimaryAccentBrush}"/>
                                                <Setter TargetName="arrow" Property="Stroke" Value="{StaticResource PrimaryAccentBrush}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                        </Grid>
                    </Border>
                    
                    <!-- Content (Genişletilmiş Alan) -->
                    <Border x:Name="ContentBorder"
                            DockPanel.Dock="Bottom"
                            Padding="{TemplateBinding Padding}"
                            Visibility="Collapsed">
                        <ContentPresenter/>
                    </Border>
                </DockPanel>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsExpanded" Value="True">
                        <Setter TargetName="ContentBorder" Property="Visibility" Value="Visible"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </Setter.Value>
    </Setter>
</Style>

    <!-- Rapor formatı (PDF, WORD vb.) butonları için stil -->
    <Style x:Key="ReportFormatButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="#dc3545"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Padding" Value="12,5"/>
        <Setter Property="Margin" Value="0,0,8,8"/>
        <Setter Property="Width" Value="90"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="5"
                            SnapsToDevicePixels="True">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#c15c65"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ReportFormatToggleButtonStyle" TargetType="RadioButton">
        <Setter Property="Background" Value="#dc3545"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Padding" Value="12,5"/>
        <Setter Property="Margin" Value="0,0,8,8"/>
        <Setter Property="Width" Value="90"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="8">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
            </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{StaticResource AccentBlueBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource AccentBlueBrush}"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource TopBarTextSecondaryBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- 2. Düzenle/Sil gibi ikonlu butonlar için stil -->
    <Style x:Key="IconOnlyButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="32"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="16">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource CardDarkerBackgroundBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Ayarlar menüsü için RadioButton stili -->
    <Style x:Key="SettingsMenuButtonStyle" TargetType="RadioButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Setter Property="Padding" Value="15,12"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Foreground" Value="{StaticResource TopBarTextSecondaryBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border x:Name="border" Background="Transparent" CornerRadius="8" Padding="{TemplateBinding Padding}">
                        <ContentPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource CardDarkerBackgroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource TopBarTextPrimaryBrush}"/>
                            <Setter TargetName="border" Property="Background" Value="{StaticResource AccentBlueBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Üyelik Kartı Stili -->
    <Style x:Key="MembershipCardStyle" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource CardDarkerBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ProgressBarBackgroundBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="15"/>
        <Setter Property="Padding" Value="25"/>
        <Setter Property="Margin" Value="10"/>
    </Style>

<!-- 1. ToggleButton Stili (ComboBox'ın açma/kapama düğmesi için) -->
<Style x:Key="ComboBoxToggleButtonModernStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="Template">
        <Setter.Value>
            <ControlTemplate TargetType="{x:Type ToggleButton}">
                <Border x:Name="templateRoot" 
                        Background="Transparent"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                    <!-- Aşağı Ok İkonu -->
                    <Path x:Name="arrow"
                          Data="M 0,0 L 4,4 L 8,0 Z"
                          Fill="{StaticResource TopBarTextSecondaryBrush}"
                          HorizontalAlignment="Right"
                          Margin="0,0,8,0"
                          VerticalAlignment="Center"/>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="arrow" Property="Fill" Value="{StaticResource AccentBlueBrush}"/>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter TargetName="arrow" Property="Fill" Value="{StaticResource AccentBlueBrush}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </Setter.Value>
    </Setter>
</Style>

<!-- 2. Ana ComboBox Stili -->
<Style x:Key="ModernComboBoxStyle" TargetType="{x:Type ComboBox}">
    <Setter Property="Foreground" Value="{StaticResource TopBarTextPrimaryBrush}"/>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderBrush" Value="{StaticResource TopBarTextSecondaryBrush}"/>
    <Setter Property="BorderThickness" Value="0,0,0,1"/>
    <Setter Property="Padding" Value="5,8"/>
    <Setter Property="VerticalAlignment" Value="Center"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="Template">
        <Setter.Value>
            <ControlTemplate TargetType="{x:Type ComboBox}">
                <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                    </Grid.ColumnDefinitions>
                    
                    <Popup x:Name="PART_Popup"
                           AllowsTransparency="true"
                           Grid.ColumnSpan="2"
                           IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                           Placement="Bottom"
                           PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                        <Border x:Name="dropDownBorder"
                                Background="{StaticResource CardBackgroundBrush}"
                                BorderBrush="{StaticResource AccentBlueBrush}"
                                BorderThickness="1"
                                CornerRadius="5"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <ItemsPresenter x:Name="PART_ItemsPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                    </Popup>
                    
                    <ToggleButton x:Name="toggleButton"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  Grid.ColumnSpan="2"
                                  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                  Style="{StaticResource ComboBoxToggleButtonModernStyle}"/>
                                  
                    <ContentPresenter x:Name="contentPresenter"
                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                      Content="{TemplateBinding SelectionBoxItem}"
                                      ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      IsHitTestVisible="false"
                                      Margin="{TemplateBinding Padding}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="BorderBrush" Value="{StaticResource AccentBlueBrush}"/>
                    </Trigger>
                    <Trigger Property="IsKeyboardFocusWithin" Value="true">
                         <Setter Property="BorderBrush" Value="{StaticResource AccentBlueBrush}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </Setter.Value>
    </Setter>
</Style>

<Style x:Key="InvisibleButtonStyle" TargetType="Button">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="Template">
        <Setter.Value>
            <ControlTemplate TargetType="Button">
                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </Border>
            </ControlTemplate>
        </Setter.Value>
    </Setter>
</Style>

<!-- Detay etiketleri için stil -->
<Style x:Key="DetailLabelTextStyle" TargetType="TextBlock">
    <Setter Property="Foreground" Value="{StaticResource TopBarTextSecondaryBrush}"/>
    <Setter Property="FontWeight" Value="SemiBold"/>
    <Setter Property="Margin" Value="0,0,10,5"/>
</Style>

<!-- Detay değerleri için stil -->
<Style x:Key="DetailValueTextStyle" TargetType="TextBlock">
    <Setter Property="Foreground" Value="{StaticResource TopBarTextPrimaryBrush}"/>
    <Setter Property="Margin" Value="0,0,0,5"/>
</Style>

<!-- 3. ComboBox Öğesi (Item) Stili -->
<Style TargetType="{x:Type ComboBoxItem}">
    <Setter Property="Foreground" Value="{StaticResource TopBarTextPrimaryBrush}"/>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="Padding" Value="10,8"/>
    <Setter Property="Template">
        <Setter.Value>
            <ControlTemplate TargetType="ComboBoxItem">
                <Border x:Name="Bd"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}"
                        SnapsToDevicePixels="true">
                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="Bd" Property="Background" Value="{StaticResource CardDarkerBackgroundBrush}"/>
                    </Trigger>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter TargetName="Bd" Property="Background" Value="{StaticResource AccentBlueBrush}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </Setter.Value>
    </Setter>
</Style>

    <ControlTemplate x:Key="ComboBoxEditableTextBoxTemplate" TargetType="TextBox">
        <Border x:Name="border"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="True">
            <ScrollViewer x:Name="PART_ContentHost" Focusable="False"
                      HorizontalScrollBarVisibility="Hidden"
                      VerticalScrollBarVisibility="Hidden"/>
        </Border>
    </ControlTemplate>

    <Style x:Key="EditableModernComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="Foreground" Value="{StaticResource TopBarTextPrimaryBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{StaticResource TopBarTextSecondaryBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="Padding" Value="5,8"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                        </Grid.ColumnDefinitions>

                        <Popup x:Name="PART_Popup"
                           AllowsTransparency="true"
                           Grid.ColumnSpan="2"
                           IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                           Placement="Bottom"
                           PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                            <Border x:Name="dropDownBorder"
                                Background="{StaticResource CardBackgroundBrush}"
                                BorderBrush="{StaticResource AccentBlueBrush}"
                                BorderThickness="1"
                                CornerRadius="5"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <ScrollViewer x:Name="DropDownScrollViewer">
                                    <ItemsPresenter x:Name="PART_ItemsPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </ScrollViewer>
                            </Border>
                        </Popup>

                        <ToggleButton x:Name="toggleButton"
                                  Grid.ColumnSpan="2"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                  Style="{StaticResource ComboBoxToggleButtonModernStyle}"/>

                        <ContentPresenter x:Name="contentPresenter"
                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                      Content="{TemplateBinding SelectionBoxItem}"
                                      ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      IsHitTestVisible="false"
                                      Margin="{TemplateBinding Padding}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <TextBox x:Name="PART_EditableTextBox"
                             HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                             VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                             Margin="{TemplateBinding Padding}"
                             Focusable="True"
                             Background="Transparent"
                             BorderThickness="0"
                             Foreground="{TemplateBinding Foreground}"
                             Visibility="Hidden"
                             Style="{x:Null}"
                             Template="{StaticResource ComboBoxEditableTextBoxTemplate}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" Value="{StaticResource AccentBlueBrush}" TargetName="toggleButton"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="true">
                            <Setter Property="BorderBrush" Value="{StaticResource AccentBlueBrush}" TargetName="toggleButton"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter TargetName="contentPresenter" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpandableListItemToggleButtonStyle" TargetType="ToggleButton">
    <Setter Property="Background" Value="{StaticResource CardDarkerBackgroundBrush}"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="Margin" Value="0,0,0,10"/>
    <Setter Property="Padding" Value="15"/>
    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="Template">
        <Setter.Value>
            <ControlTemplate TargetType="ToggleButton">
                <Border x:Name="RootBorder" 
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="10">
                    <!-- Animasyonlu geçiş için Border içine alıyoruz -->
                    <Border.CacheMode>
                        <BitmapCache />
                    </Border.CacheMode>
                    <ContentPresenter />
                </Border>
                <ControlTemplate.Triggers>
                    <!-- Fare üzerine gelince hafif bir parlama efekti -->
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="RootBorder" Property="Background" Value="#3A3F5E" />
                    </Trigger>
                    <!-- Seçiliyken (genişletilmişken) farklı bir arka plan -->
                    <Trigger Property="IsChecked" Value="True">
                        <Setter TargetName="RootBorder" Property="Background" Value="{StaticResource MainBackgroundBrush}" />
                        <Setter TargetName="RootBorder" Property="BorderBrush" Value="{StaticResource TopBarTextSecondaryBrush}" />
                        <Setter TargetName="RootBorder" Property="BorderThickness" Value="1" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </Setter.Value>
    </Setter>
</Style>

<!-- Detay bölümlerini ayıran çizgi stili -->
<Style x:Key="DetailSeparatorStyle" TargetType="Border">
    <Setter Property="BorderBrush" Value="{StaticResource ProgressBarBackgroundBrush}"/>
    <Setter Property="BorderThickness" Value="0,1,0,0"/>
    <Setter Property="Margin" Value="0,10,0,10"/>
    <Setter Property="Opacity" Value="0.5"/>
</Style>

    <!-- ScrollBar -->
<Style x:Key="ModernScrollBarThumb" TargetType="{x:Type Thumb}">
    <Setter Property="OverridesDefaultStyle" Value="true"/>
    <Setter Property="IsTabStop" Value="false"/>
    <Setter Property="Template">
        <Setter.Value>
            <ControlTemplate TargetType="{x:Type Thumb}">
                <Border x:Name="thumbBorder"
                        Background="#565f89" 
                        CornerRadius="4"
                        SnapsToDevicePixels="True"/>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="thumbBorder" Property="Background" Value="#7aa2f7"/>
                    </Trigger>
                    <Trigger Property="IsDragging" Value="True">
                        <Setter TargetName="thumbBorder" Property="Background" Value="#7dcfff"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </Setter.Value>
    </Setter>
</Style>

<Style TargetType="{x:Type ScrollBar}">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="Width" Value="8"/>
    <Setter Property="Template">
        <Setter.Value>
            <ControlTemplate TargetType="{x:Type ScrollBar}">
                <Grid SnapsToDevicePixels="True" Background="{TemplateBinding Background}">
                    <Track x:Name="PART_Track"
                           IsDirectionReversed="true">
                        <Track.Thumb>
                            <Thumb Style="{StaticResource ModernScrollBarThumb}"/>
                        </Track.Thumb>
                    </Track>
                </Grid>
            </ControlTemplate>
        </Setter.Value>
    </Setter>
    <Style.Triggers>
        <Trigger Property="Orientation" Value="Horizontal">
            <Setter Property="Width" Value="Auto"/>
            <Setter Property="Height" Value="8"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid SnapsToDevicePixels="True" Background="{TemplateBinding Background}">
                            <Track x:Name="PART_Track">
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ModernScrollBarThumb}"/>
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Trigger>
    </Style.Triggers>
</Style>

        <Style x:Key="ModernDatePickerStyle" TargetType="DatePicker">
            <Setter Property="Background" Value="#2D3A4F" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderThickness" Value="0,0,0,1" />
            <Setter Property="BorderBrush" Value="#4A5A74" />
            <Setter Property="Padding" Value="10,8" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DatePicker">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                CornerRadius="5">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                
                                <!-- Tarihin gösterildiği metin kutusu -->
                                <DatePickerTextBox x:Name="PART_TextBox"
                                                   Grid.Column="0"
                                                   Padding="{TemplateBinding Padding}"
                                                   BorderThickness="0"
                                                   Background="Transparent"
                                                   VerticalContentAlignment="Center"
                                                   Foreground="{TemplateBinding Foreground}"/>
                                
                                <!-- Takvim ikonunu gösteren buton -->
                                <Button x:Name="PART_Button" 
                                        Grid.Column="1" 
                                        Foreground="{TemplateBinding Foreground}" 
                                        Focusable="False" 
                                        Style="{StaticResource IconOnlyButtonStyle}" 
                                        Width="30">
                                    <Image Source="/Assets/Images/Icons/calendar.png" Width="16" Height="16"/>
                                </Button>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Kullanıcı Mesaj Balonu Stili -->
        <Style x:Key="UserMessageBorderStyle" TargetType="Border">
            <Setter Property="Background" Value="{StaticResource PrimaryAccentBrush}"/>
            <!-- Mor tonu -->
            <Setter Property="CornerRadius" Value="20,20,5,20"/>
            <Setter Property="Padding" Value="15"/>
            <Setter Property="Margin" Value="80,5,5,5"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="MaxWidth" Value="450"/>
        </Style>

        <!-- FinBot Mesaj Balonu Stili -->
        <Style x:Key="BotMessageBorderStyle" TargetType="Border">
            <Setter Property="Background" Value="{StaticResource CardDarkerBackgroundBrush}"/>
            <Setter Property="CornerRadius" Value="20,20,20,5"/>
            <Setter Property="Padding" Value="15"/>
            <Setter Property="Margin" Value="5,5,80,5"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="MaxWidth" Value="450"/>
        </Style>

        <!-- Hızlı Eylem Buton Stili -->
        <Style x:Key="QuickActionButtonStyle" TargetType="Button" BasedOn="{StaticResource PrimaryButtonStyle}">
            <Setter Property="Background" Value="{StaticResource CardDarkerBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource TopBarTextSecondaryBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ProgressBarBackgroundBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="15,10"/>
            <Setter Property="Margin" Value="5"/>
        </Style>

    <Style x:Key="ChatQuickActionButtonStyle" TargetType="Button" BasedOn="{StaticResource QuickActionButtonStyle}">
        <Setter Property="Command" Value="{Binding DataContext.SendQuickActionCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
        <Setter Property="CommandParameter" Value="{Binding Content, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Width" Value="150"/>
    </Style>

    <Style x:Key="ModernCheckBoxStyle" TargetType="CheckBox">
    <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderBrush" Value="{StaticResource TopBarTextSecondaryBrush}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Cursor" Value="Hand"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="Template">
        <Setter.Value>
            <ControlTemplate TargetType="CheckBox">
                <StackPanel Orientation="Horizontal">
                    <!-- CheckBox Kutusu ve İşareti için bir Grid -->
                    <Grid Width="20" Height="20" VerticalAlignment="Center">
                        <!-- Kutu için Border -->
                        <Border x:Name="CheckBoxBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3"/>
                        <!-- Onay İşareti için Path (sadece işaretliyken görünür) -->
                        <Path x:Name="CheckMark"
                              Data="M 4,10 L 8,14 L 16,6"
                              Stroke="{StaticResource MainBackgroundBrush}"
                              StrokeThickness="2.5"
                              StrokeStartLineCap="Round"
                              StrokeEndLineCap="Round"
                              StrokeLineJoin="Round"
                              Opacity="0"/>
                    </Grid>
                    <!-- CheckBox Metni -->
                    <ContentPresenter Margin="10,0,0,0"
                                      VerticalAlignment="Center"
                                      RecognizesAccessKey="True"/>
                </StackPanel>
                <ControlTemplate.Triggers>
                    <!-- Fare üzerine gelince -->
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="CheckBoxBorder" Property="BorderBrush" Value="{StaticResource PrimaryAccentBrush}"/>
                    </Trigger>
                    <!-- İşaretli olduğunda -->
                    <Trigger Property="IsChecked" Value="True">
                        <Setter TargetName="CheckBoxBorder" Property="Background" Value="{StaticResource PrimaryAccentBrush}"/>
                        <Setter TargetName="CheckBoxBorder" Property="BorderBrush" Value="{StaticResource PrimaryAccentBrush}"/>
                        <Setter TargetName="CheckMark" Property="Opacity" Value="1"/>
                    </Trigger>
                    <!-- Devre dışı bırakıldığında -->
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.5"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </Setter.Value>
    </Setter>
</Style>

            <Style x:Key="MaterialDesignCircularProgressBar" TargetType="ProgressBar">
                <Setter Property="Width" Value="50"/>
                <Setter Property="Height" Value="50"/>
                <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ProgressBar">
                            <!-- Viewbox, ProgressBar'ın boyutlandırılmasına izin verir -->
                            <Viewbox>
                                <Grid Width="100" Height="100" Background="Transparent">
                                    <!-- Arka Plan Halkası (sabit) -->
                                    <Ellipse x:Name="BackgroundEllipse"
                                             Width="90" Height="90"
                                             Stroke="{StaticResource TopBarTextSecondaryBrush}"
                                             StrokeThickness="8"
                                             Opacity="0.3"
                                             HorizontalAlignment="Center"
                                             VerticalAlignment="Center"/>

                                    <!-- Dönen Parça (animasyonlu) -->
                                    <Ellipse x:Name="IndicatorEllipse"
                                             Width="90" Height="90"
                                             Stroke="{TemplateBinding Foreground}"
                                             StrokeThickness="8"
                                             StrokeDashArray="140 142"
                                             StrokeDashCap="Round"
                                             HorizontalAlignment="Center"
                                             VerticalAlignment="Center">
                                        <Ellipse.RenderTransform>
                                            <RotateTransform Angle="0" CenterX="45" CenterY="45"/>
                                        </Ellipse.RenderTransform>
                                    </Ellipse>
                                </Grid>
                            </Viewbox>
                            <ControlTemplate.Triggers>
                                <!-- IsIndeterminate true olduğunda animasyonu başlat -->
                                <Trigger Property="IsIndeterminate" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetName="IndicatorEllipse"
                                                    Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                    From="0"
                                                    To="360"
                                                    Duration="0:0:1.2"
                                                    RepeatBehavior="Forever"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

    <Style x:Key="ModernCardStyle" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource CardDarkerBackgroundBrush}"/>
        <Setter Property="CornerRadius" Value="12"/>
        <Setter Property="Padding" Value="25"/>
        <Setter Property="Margin" Value="0,0,0,20"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect ShadowDepth="1" Color="#000000" Opacity="0.1" BlurRadius="10" Direction="270"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernTitleTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Margin" Value="0,0,0,20"/>
    </Style>

    <Style x:Key="ModernActionButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="{StaticResource AccentBlueBrush}"/>
        <Setter Property="Padding" Value="12,8"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth="2" Color="#000000" Opacity="0.2" BlurRadius="5" Direction="270"/>
                        </Border.Effect>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Opacity" Value="0.9"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Opacity" Value="0.7"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="SeparatorStyle" TargetType="Border">
        <Setter Property="BorderBrush" Value="{StaticResource TopBarTextSecondaryBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="Margin" Value="0,15,0,15"/>
        <Setter Property="Opacity" Value="0.2"/>
    </Style>

    <Style x:Key="CardSeparatorStyle" TargetType="Border">
    <Setter Property="BorderBrush" Value="{StaticResource TopBarTextSecondaryBrush}"/>
    <Setter Property="BorderThickness" Value="0,1,0,0"/>
    <Setter Property="Opacity" Value="0.5"/>
    <Setter Property="Margin" Value="0,10,0,15"/>
</Style>

<!-- Başarı (Yeşil) Düğme Stili -->
<Style x:Key="SuccessButtonStyle" TargetType="Button" BasedOn="{StaticResource PrimaryButtonStyle}">
    <Setter Property="Background" Value="{StaticResource StatusGreenBrush}"/>
</Style>

<!-- Tehlike (Kırmızı) Düğme Stili -->
    <Style x:Key="DangerButtonStyle" TargetType="Button" BasedOn="{StaticResource PrimaryButtonStyle}">
        <Setter Property="Background" Value="{StaticResource StatusRedBrush}"/>
    </Style>

</ResourceDictionary>